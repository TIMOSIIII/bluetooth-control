# bluetooth camera 

import smbus
import os
import time
import picamera

# I2C 인터페이스 설정
bus = smbus.SMBus(1)
address = 0x08  # 마스터의 I2C 주소 
# I2C 와 관련된 주소는 뭐지??

# GPIO 핀 설정
gpio_pin = 18 # 핀 설정은 어떻게 하는 거야??              
os.system("gpio export {} out".format(gpio_pin))

# 자동으로 사진을 찍는 함수 
def take_picture_and_send():
    with picamera.PiCamera() as camera:
        camera.resolution = (640, 480)
        camera.start_preview()
        time.sleep(2)
        camera.capture('/home/pi/Desktop/image.jpg')
        with open('/home/pi/Desktop/image.jpg', 'rb') as f:
            data = f.read()
            bus.write_i2c_block_data(address, 0, list(data))


# 인터럽트 발생 시 자동으로 사진을 찍고 보내는 함수
def on_interrupt():
    # 인터럽트가 발생했을 때의 동작을 여기에 작성합니다.
    take_picture_and_send()


while True:
    try:
        # 마스터로부터 데이터를 수신
        data = bus.read_byte(address)        
        # 수동으로 찍는 기능이다. 수신한 데이터가 'q'인 경우에만 사진 촬영
        elif data == ord('q'):
            os.system("gpio -g write {} 1".format(gpio_pin))  # GPIO 핀 출력을 HIGH로 설정
            take_picture_and_send()
            os.system("gpio -g write {} 0".format(gpio_pin))  # GPIO 핀 출력을 LOW로 설정
    except Exception as e:
        print("에러 발생: ", e)
